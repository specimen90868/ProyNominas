<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolBusqueda.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>736, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolConsultar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAR1SURBVEhLjVVLb1tVEG6UDRtK9ixYAav8iSL1TyCklAKp
        ECzyG5Bg0UWEoOoCKSzBC6DQJI4S4tf14/p1/Y7t2I2dl+04dnz9zsOZ6TfHsZO2aZqRPp259jnzzXwz
        5947sPeAeWALKN8SceABcCubn5mZ4Z3dPWqYJgvqR0fX+qPnRDLJ09PThLP3hyFutq1SqcSF3X0q7pdZ
        sPUWf/S8f3DICwsLQvBkGOJmK5tmk8rVGmleHzk0N9mcLrK7NHK6PQpur07/2+y0srpGuRcFOjisk8Vi
        EYLfhiFutnK70+F6wySbw8F2p4ttDicZ0ZisrHm8IPCx7g+Iz6l0hsxWmy8InID04nV8DnwIKCt3ul1u
        tTvkdGnsAIFP95MbwYKhMOuBANnsDvgh9vp8vFUoUHZzkxcXF2lubo4v8Io/OzvLU1NTHcT+TBG0223q
        9vpkXVkhu91BS0vLhIDSTCBF0WgMjW7RfqV6K1Qgt9vtlgoNRdDr9fj4+ISSyRQnUyk2jAhhWvjoqMGV
        ygFVq1WuHNY5k3vBQSNKgXBEreFoQlY2YgmSVQ+GOZZMCwkUafPk5GRNEXS7PT49PSWXprGu62yz2ciH
        Vff72Wq10iYkOWq22KsH+Nl/i/R8aZml6YvLVv772b+8jqrFf75k5bV1G9UaJnc63UuCNvQ/OzuDPHbS
        NI1WV1fJD+2DwSCtra1ROp2mJvbEIRf6QRomy+PTKRAKkz8YUn4obMgw0F6pTGazRRLzSgVdFoIQGhmJ
        RDiA4OEwGowq8Bt6EOX+8QmnM1kOgFSq8weCJE3fSGfY7fEgoSCjX9zp9qjXP+Zer39ZQavVosFgoBor
        wQ3DIBApQDaKxWIEAsrl8yQEsm93bw+/Hb8VSPqyAmmIEEj28XhcgIYnOZvNsmwU/2ww4GJxm8OQIhaL
        q0EIocpUagO+oSqWZ+yF3APuo4oxgdlsKgKRSOD3+0mIcFAd9nq9PDg/5+L2Nktf0JPxKgSpVEoqY5Fy
        Z2eHZG+/f0WiOsZRCCCFCipNlc0yPTLPAJ8LQbHIiUSCwtgjssn/sh+jTSBRBNhD50SvEpRxOYRADktm
        Ap/PJ4fU6nA4CBJRoVCkSDQqzRVJxohEohTHWUmmVqupWBjTcQ9KO/slVQECS2aq/EwmM8wOmsrUELLa
        2NhQ98Lj8ajpAjF6MtQ9n89L5ap6hnVxeUcEXstf/3ADs9vBaAlaYB/5B9VDzL1bEUBfpbcEyuVyStJG
        o8GmaZKsIoskKgTyAh0R3Lt794PuFzMP6NG3372Bh988oj/+tKiLKNnJxVtfX1dyyI2XgRj5AnmvCUkD
        n4ARgdhHwNfA99fA/uTpU9VkZK2aLlMltx7Bx68W3B+5oGqspQK8/scVvMvmf/7lVyld9UC0lx7I+AqB
        BIU0hHcZn5ycjCU6OKzdmuDxDz/+RLg4qvTbIosv38TEROUixo127+NPPiWby825wjbLwavrdX4ivckz
        X37FOPv7MMS77SGQQ8l1Kfu19Q3/InMEv/P+Szvz9N5/gzdvAAAAAElFTkSuQmCC
</value>
  </data>
</root>